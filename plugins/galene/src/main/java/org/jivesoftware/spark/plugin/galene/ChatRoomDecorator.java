/**
 * Copyright (C) 2004-2010 Jive Software. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jivesoftware.spark.plugin.galene;

import javax.swing.ImageIcon;

import org.jivesoftware.spark.component.RolloverButton;
import org.jivesoftware.spark.ui.ChatRoom;
import org.jivesoftware.spark.util.*;
import org.jivesoftware.spark.util.log.*;
import org.jivesoftware.smack.packet.*;

import javax.xml.bind.DatatypeConverter;
import org.jivesoftware.resource.SparkRes;

public class ChatRoomDecorator
{
    public RolloverButton galeneButton;
    public final ChatRoom room;
	public static String ICON_STRING = "";

    public ChatRoomDecorator(final ChatRoom room, final SparkGalenePlugin plugin)
    {
        this.room = room;

        try {
            byte[] imageByte = DatatypeConverter.parseBase64Binary(ICON_STRING);
            ImageIcon galeneIcon = new ImageIcon(imageByte);
            galeneButton = new RolloverButton(galeneIcon);
            galeneButton.setToolTipText(GraphicUtils.createToolTip(SparkGaleneResource.getString("name")));
            final String roomId = getNode(room.getBareJid().toString());
            final String sessionID = roomId + "/" + System.currentTimeMillis();

            galeneButton.addActionListener(event -> {
                String newUrl, newRoomId;

                if ("groupchat".equals(room.getChatType().toString())) {
                    newRoomId = sessionID;
                    newUrl = plugin.url + "?room=" + newRoomId;
                    plugin.handleClick(newUrl, room, newUrl, Message.Type.groupchat);

                } else {
                    newRoomId = sessionID;
                    newUrl = plugin.url + "?room=" + newRoomId;
                    plugin.handleClick(newUrl, room, newUrl, Message.Type.chat);
                }
            });
            room.getEditorBar().add(galeneButton);

        } catch (Exception e) {
            Log.error("cannot create galene webinar icon", e);
        }

    }

    public void finished()
    {
        Log.warning("ChatRoomDecorator: finished " + room.getBareJid());
    }

    private String getNode(String jid)
    {
        String node = jid;
        int pos = node.indexOf("@");

        if (pos > -1)
            node = jid.substring(0, pos);

        return node;
    }
}
